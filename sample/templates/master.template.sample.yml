AWSTemplateFormatVersion: '2010-09-09'
Description: Build a distributed Splunk cluster in a VPC with a bastion host.
Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the Bastion
      host
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: "[-_ a-zA-Z0-9]*"
    ConstraintDescription: can contain only alphanumeric characters, spaces, dashes
      and underscores.
  BastionKeyName:
    Description: Name of the EC2 KeyPair we will create internally to access instances
      in our VPC from the Bastion host
    Type: String
    Default: bastion_key
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: "[-_ a-zA-Z0-9]*"
    ConstraintDescription: can contain only alphanumeric characters, spaces, dashes
      and underscores.
  SSHFrom:
    Description: Lockdown SSH access to Bastion host (default can be accessed from
      anywhere)
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: must be a valid CIDR range of the form x.x.x.x/x.
  InstanceType:
    Description: Splunk Server EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
    - t2.micro
    - m3.medium
    - m3.large
    - m3.xlarge
    - m3.2xlarge
    - m4.large
    - m4.xlarge
    - m4.2xlarge
    - m4.4xlarge
    - m4.10xlarge
    - c3.large
    - c3.xlarge
    - c3.2xlarge
    - c3.4xlarge
    - c3.8xlarge
    - c4.large
    - c4.xlarge
    - c4.2xlarge
    - c4.4xlarge
    - c4.8xlarge
    - r3.large
    - r3.xlarge
    - r3.2xlarge
    - r3.4xlarge
    - r3.8xlarge
    - i2.xlarge
    - i2.2xlarge
    - i2.4xlarge
    - i2.8xlarge
    - d2.xlarge
    - d2.2xlarge
    - d2.4xlarge
    - d2.8xlarge
    ConstraintDescription: must be a valid EC2 instance type.
  ClusterSize:
    Description: Splunk Cluster size or number of peer nodes; must be between 2 and
      9
    Type: Number
    MinValue: '2'
    MaxValue: '9'
    Default: '3'
    AllowedValues:
    - '2'
    - '3'
    - '4'
    - '5'
    - '6'
    - '7'
    - '8'
    - '9'
  ClusterAZCount:
    Description: Number of Availability Zones [1,2,3] to distribute nodes over; set
      to > 1 for Multi-AZ Clustering
    Type: Number
    MinValue: '1'
    MaxValue: '3'
    Default: '1'
    AllowedValues:
    - '1'
    - '2'
    - '3'
  ClusterSecurityKey:
    Description: Security key to authenticate traffic between cluster nodes
    Type: String
    Default: password
    AllowedPattern: "[-_ a-zA-Z0-9]+"
    ConstraintDescription: can contain only alphanumeric characters, spaces, dashes
      and underscores.
  CIDRBlock:
    Description: Restrict incoming data from specified IP range (default can be received
      from anywhere)
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: must be a valid CIDR range of the form x.x.x.x/x.
  SplunkLicenseBucket:
    Description: "[Optional] Name of private S3 bucket with licenses to be accessed
      via authenticated requests"
    Default: ''
    Type: String
  SplunkLicensePath:
    Type: String
    Default: ''
    Description: "[Optional] Path to license file in S3 Bucket"
  Subdomain:
    Description: "[Optional] Subdomain to use for new DNS records for cluster (without
      trailing dot)"
    Type: String
    MinLength: '0'
    MaxLength: '255'
    Default: ''
    AllowedPattern: "[-_a-zA-Z0-9]*"
    ConstraintDescription: can contain only alphanumeric characters, and dashes and
      underscores.
  HostedZoneName:
    Description: "[Optional] Hosted zone name e.g. 'example.com' (without trailing
      dot) - Route 53 must be the DNS service for specified domain"
    Type: String
    Default: ''
    AllowedPattern: "^(([a-zA-Z0-9]|[a-zA-Z0-9][-a-zA-Z0-9]*[a-zA-Z0-9])\\.)*([A-Za-z0-9]|[A-Za-z0-9][-A-Za-z0-9]*[A-Za-z0-9])?$"
    ConstraintDescription: Must be a valid DNS domain.
Mappings:
  AWSRegion2s3Bucket:
    us-east-1:
      s3Bucket: https://splunk-cloud-us-east-1.s3.amazonaws.com
    us-west-1:
      s3Bucket: https://splunk-cloud-us-west-1.s3.amazonaws.com
    us-west-2:
      s3Bucket: https://splunk-cloud-us-west-2.s3.amazonaws.com
    eu-west-1:
      s3Bucket: https://splunk-cloud-eu-west-1.s3.amazonaws.com
    sa-east-1:
      s3Bucket: https://splunk-cloud-sa-east-1.s3.amazonaws.com
    ap-northeast-1:
      s3Bucket: https://splunk-cloud-ap-northeast-1.s3.amazonaws.com
    ap-southeast-1:
      s3Bucket: https://splunk-cloud-ap-southeast-1.s3.amazonaws.com
    ap-southeast-2:
      s3Bucket: https://splunk-cloud-ap-southeast-2.s3.amazonaws.com
Conditions:
  AddDNSRecords:
    Fn::Not:
    - Fn::Equals:
      - Ref: HostedZoneName
      - ''
Resources:
  VPC:
    Type: AWS::CloudFormation::Stack
    Metadata:
      Comment: VPC with 1 or more subnets across different AZs.
    Properties:
      TemplateURL:
        Fn::Join:
        - "/"
        - - Fn::FindInMap:
            - AWSRegion2s3Bucket
            - Ref: AWS::Region
            - s3Bucket
          - cloudformation-templates
          - vpc_multi_subnets.template
      Parameters:
        SubnetCount:
          Ref: ClusterAZCount
  BastionHost:
    Type: AWS::CloudFormation::Stack
    Metadata:
      Comment: Bastion host in public subnet.
    DependsOn: VPC
    Properties:
      TemplateURL:
        Fn::Join:
        - "/"
        - - Fn::FindInMap:
            - AWSRegion2s3Bucket
            - Ref: AWS::Region
            - s3Bucket
          - cloudformation-templates
          - bastion_host.template
      Parameters:
        VpcId:
          Fn::GetAtt:
          - VPC
          - Outputs.VpcId
        SubnetId:
          Fn::GetAtt:
          - VPC
          - Outputs.MainSubnetId
        KeyName:
          Ref: KeyName
        BastionKeyName:
          Ref: BastionKeyName
        SSHFrom:
          Ref: SSHFrom
  SplunkCluster:
    Type: AWS::CloudFormation::Stack
    Metadata:
      Comment: Splunk cluster across one or more AZs.
    DependsOn: BastionHost
    Properties:
      TemplateURL:
        Fn::Join:
        - "/"
        - - Fn::FindInMap:
            - AWSRegion2s3Bucket
            - Ref: AWS::Region
            - s3Bucket
          - cloudformation-templates
          - splunk_cluster.template
      Parameters:
        VpcId:
          Fn::GetAtt:
          - VPC
          - Outputs.VpcId
        SubnetIds:
          Fn::GetAtt:
          - VPC
          - Outputs.SubnetIds
        SubnetCount:
          Ref: ClusterAZCount
        ClusterSize:
          Ref: ClusterSize
        ClusterSecurityKey:
          Ref: ClusterSecurityKey
        InstanceType:
          Ref: InstanceType
        KeyName:
          Ref: BastionKeyName
        CIDRBlock:
          Ref: CIDRBlock
        SplunkLicenseBucket:
          Ref: SplunkLicenseBucket
        SplunkLicensePath:
          Ref: SplunkLicensePath
        Subdomain:
          Ref: Subdomain
        HostedZoneName:
          Ref: HostedZoneName
Outputs:
  VpcId:
    Value:
      Fn::GetAtt:
      - VPC
      - Outputs.VpcId
    Description: VPC ID of newly created VPC
  SubnetIds:
    Value:
      Fn::GetAtt:
      - VPC
      - Outputs.SubnetIds
    Description: Public subnets IDs
  BastionPublicIp:
    Value:
      Fn::GetAtt:
      - BastionHost
      - Outputs.PublicIp
    Description: Bastion host public IP address
  MasterNodeURL:
    Condition: AddDNSRecords
    Value:
      Fn::GetAtt:
      - SplunkCluster
      - Outputs.MasterNodeURL
    Description: Splunk URL of cluster master
  MasterNodeIpAddress:
    Value:
      Fn::GetAtt:
      - SplunkCluster
      - Outputs.MasterNodeIpAddress
    Description: Public IP address of cluster master
  SearchHeadURL:
    Condition: AddDNSRecords
    Value:
      Fn::GetAtt:
      - SplunkCluster
      - Outputs.SearchHeadURL
    Description: Splunk URL of cluster search head
  SearchHeadIpAddress:
    Value:
      Fn::GetAtt:
      - SplunkCluster
      - Outputs.SearchHeadIpAddress
    Description: Public IP address of cluster search head
  PeerNodesURL:
    Condition: AddDNSRecords
    Value:
      Fn::GetAtt:
      - SplunkCluster
      - Outputs.PeerNodesURL
    Description: Indexer tier address to forward data to
  PeerNodesIpAddresses:
    Value:
      Fn::GetAtt:
      - SplunkCluster
      - Outputs.PeerNodesIpAddresses
    Description: List of public IP address of all cluster peer nodes

