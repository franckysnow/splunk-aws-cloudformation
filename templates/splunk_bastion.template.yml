AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation tempate for VPC with public and private subnets.
Parameters:
  BucketName:
    Description: Bucket storing the s3 artefacts
    Type: String
    MinLength: '1'
    AllowedPattern: "[-_ a-zA-Z0-9]*"
    ConstraintDescription: can contain only alphanumeric characters, spaces, dashes and underscores.
  SecurityGroupBastion:
    Description: Security Group for bastion host
    Type: AWS::EC2::SecurityGroup::Id
  SubnetIdBastion:
    Description: SubnetId for bastion host
    Type: AWS::EC2::Subnet::Id
  KeyNameBastion:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName
Resources:
  BastionHost:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: ami-1a962263
      KeyName:
        Ref: KeyNameBastion
      NetworkInterfaces:
      - AssociatePublicIpAddress: "true"
        DeviceIndex: "0"
        GroupSet:
          - Ref: SecurityGroupBastion
        SubnetId:
          Ref: SubnetIdBastion
      IamInstanceProfile:
        !Ref BastionInstanceProfile
      Tags:
      - Key: Name
        Value: Bastion
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          aws s3 cp s3://${ BucketName }/splunk-deployment/keys/SplunkInternal.pem /home/ec2-user/SplunkInternal.pem \
             && chown ec2-user:ec2-user /home/ec2-user/SplunkInternal.pem \
             && chmod 400 /home/ec2-user/SplunkInternal.pem
  BastionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
  BastionRolePolicies:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: bastionS3Access
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - s3:ListBucket
          Resource:
          - Fn::Join:
            - ""
            - - "arn:aws:s3:::"
              - Ref: BucketName
        - Effect: Allow
          Action:
          - s3:GetObject
          Resource:
          - Fn::Join:
            - ""
            - - "arn:aws:s3:::"
              - Ref: BucketName
              - "/splunk-deployment/keys/SplunkInternal.pem"
      Roles:
      - !Ref BastionRole
  BastionInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
      - !Ref BastionRole
Outputs:
  InstanceIdBastion:
    Description: InstanceId of the newly created Bastion Host
    Value:
      Ref: BastionHost
  InstanceIPAddressBastion:
    Description: IP address of the newly created EC2 Bastion Host
    Value:
      Fn::GetAtt:
      - BastionHost
      - PrivateIp
