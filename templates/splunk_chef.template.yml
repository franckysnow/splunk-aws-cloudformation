AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation tempate for VPC with public and private subnets.
Parameters:
  BucketName:
    Description: Bucket storing the s3 artefacts
    Type: String
    MinLength: '1'
    AllowedPattern: "[-_ a-zA-Z0-9]*"
    ConstraintDescription: can contain only alphanumeric characters, spaces, dashes and underscores.
  SecurityGroupChef:
    Description: Security Group for Chef host
    Type: AWS::EC2::SecurityGroup::Id
  SubnetIdChef:
    Description: SubnetId for search head host
    Type: AWS::EC2::Subnet::Id
  KeyNameSplunk:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName
Resources:
  ChefHost:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: ami-1a962263
      KeyName:
        Ref: KeyNameSplunk
      SecurityGroupIds:
      - Ref: SecurityGroupChef
      SubnetId:
        Ref: SubnetIdChef
      Tags:
      - Key: Name
        Value: Chef
      - Key: Network
        Value: Private
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum update
          yum -y install curl
          
          # create staging directories
          if [ ! -d /drop ]; then
            mkdir /drop
          fi
          if [ ! -d /downloads ]; then
            mkdir /downloads
          fi
          
          # download the Chef server package
          if [ ! -f /downloads/chef-server-core_12.16.2_amd64.deb ]; then
            echo "Downloading the Chef server package..."
            wget -nv -P /downloads https://packages.chef.io/files/stable/chef-server/12.16.2/ubuntu/16.04/chef-server-core_12.16.2-1_amd64.deb
          fi
          
          # install Chef server
          if [ ! $(which chef-server-ctl) ]; then
            echo "Installing Chef server..."
            dpkg -i /downloads/chef-server-core_12.16.2-1_amd64.deb
            chef-server-ctl reconfigure
          
            echo "Waiting for services..."
            until (curl -D - http://localhost:8000/_status) | grep "200 OK"; do sleep 15s; done
            while (curl http://localhost:8000/_status) | grep "fail"; do sleep 15s; done
          
            echo "Creating initial user and organization..."
            chef-server-ctl user-create chefadmin Chef Admin admin@4thcoffee.com insecurepassword --filename /drop/chefadmin.pem
            chef-server-ctl org-create 4thcoffee "Fourth Coffee, Inc." --association_user chefadmin --filename 4thcoffee-validator.pem
          fi
          
          echo "Your Chef server is ready!"
Outputs:
  InstanceIdChef:
    Description: InstanceId of the newly created Chef Host
    Value:
      Ref: ChefHost
  InstancePrivateIPAddressChef:
    Description: Private IP address of the newly created EC2 Chef Host
    Value:
      Fn::GetAtt:
      - ChefHost
      - PrivateIp
